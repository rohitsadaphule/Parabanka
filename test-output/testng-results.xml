<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="1" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-05T11:06:50 IST" name="Suite" finished-at="2023-07-05T11:07:36 IST" duration-ms="45764">
    <groups>
    </groups>
    <test started-at="2023-07-05T11:06:50 IST" name="Test" finished-at="2023-07-05T11:07:36 IST" duration-ms="45764">
      <class name="TestCasefolder.Para_TC003">
        <test-method is-config="true" signature="invoke()[pri:0, instance:TestCasefolder.Para_TC003@7d900ecf]" started-at="2023-07-05T11:07:33 IST" name="invoke" finished-at="2023-07-05T11:07:35 IST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoke -->
        <test-method signature="openNewAccount()[pri:0, instance:TestCasefolder.Para_TC003@7d900ecf]" started-at="2023-07-05T11:07:35 IST" name="openNewAccount" finished-at="2023-07-05T11:07:36 IST" duration-ms="164" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='username']"}
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'DESKTOP-S1Q52PL', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Rohit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:65475}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5cff79d392299140bc4a5b0f7372ced7
*** Element info: {Using=name, value=username}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='username']"}
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'DESKTOP-S1Q52PL', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Rohit\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:65475}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5cff79d392299140bc4a5b0f7372ced7
*** Element info: {Using=name, value=username}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:400)
at org.openqa.selenium.By$ByName.findElement(By.java:284)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.sendKeys(Unknown Source)
at Webpages.Para_LoginPage.Username(Para_LoginPage.java:26)
at TestCasefolder.Para_TC003.openNewAccount(Para_TC003.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openNewAccount -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCasefolder.Para_TC003@7d900ecf]" started-at="2023-07-05T11:07:36 IST" name="tearDown" finished-at="2023-07-05T11:07:36 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCasefolder.Para_TC003 -->
      <class name="TestCasefolder.Para_TC002">
        <test-method is-config="true" signature="invoke()[pri:0, instance:TestCasefolder.Para_TC002@6f53b8a]" started-at="2023-07-05T11:07:19 IST" name="invoke" finished-at="2023-07-05T11:07:22 IST" duration-ms="3044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoke -->
        <test-method signature="TestRegister(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestCasefolder.Para_TC002@6f53b8a]" started-at="2023-07-05T11:07:22 IST" name="TestRegister" data-provider="Registerdata" finished-at="2023-07-05T11:07:32 IST" duration-ms="10664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[nos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestRegister -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCasefolder.Para_TC002@6f53b8a]" started-at="2023-07-05T11:07:33 IST" name="tearDown" finished-at="2023-07-05T11:07:33 IST" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCasefolder.Para_TC002 -->
      <class name="TestCasefolder.Para_TC001">
        <test-method is-config="true" signature="invoke()[pri:0, instance:TestCasefolder.Para_TC001@7d9d0818]" started-at="2023-07-05T11:06:53 IST" name="invoke" finished-at="2023-07-05T11:07:01 IST" duration-ms="7586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoke -->
        <test-method signature="Login(java.lang.String,java.lang.String)[pri:0, instance:TestCasefolder.Para_TC001@7d9d0818]" started-at="2023-07-05T11:07:01 IST" name="Login" data-provider="loginddt" finished-at="2023-07-05T11:07:08 IST" duration-ms="6899" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[testg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testg]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestCasefolder.Para_TC001.Login(Para_TC001.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCasefolder.Para_TC001@7d9d0818]" started-at="2023-07-05T11:07:08 IST" name="tearDown" finished-at="2023-07-05T11:07:09 IST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="invoke()[pri:0, instance:TestCasefolder.Para_TC001@7d9d0818]" started-at="2023-07-05T11:07:09 IST" name="invoke" finished-at="2023-07-05T11:07:12 IST" duration-ms="2870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invoke -->
        <test-method signature="Login(java.lang.String,java.lang.String)[pri:0, instance:TestCasefolder.Para_TC001@7d9d0818]" started-at="2023-07-05T11:07:12 IST" name="Login" data-provider="loginddt" finished-at="2023-07-05T11:07:16 IST" duration-ms="4638" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestCasefolder.Para_TC001.Login(Para_TC001.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCasefolder.Para_TC001@7d9d0818]" started-at="2023-07-05T11:07:17 IST" name="tearDown" finished-at="2023-07-05T11:07:17 IST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCasefolder.Para_TC001 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
